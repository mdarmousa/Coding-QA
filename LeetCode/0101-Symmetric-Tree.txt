// https://leetcode.com/problems/symmetric-tree/solution/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsSymmetric(TreeNode root) {
        if(root == null) return true;
       return IsSymmetric(root.left, root.right);
        
    }
    private bool IsSymmetric(TreeNode r1, TreeNode r2){
        
        if(r1 == null && r2 == null) return true;
        else if(r1 == null || r2 == null) return false;
        else return r1.val == r2.val &&
             IsSymmetric(r1.right ,r2.left) &&
             IsSymmetric(r1.left ,r2.right);
    }
    
    
    
}